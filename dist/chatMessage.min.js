/* 
Atlassian Coding Challenge 
v1.0.0 
David Shaevel 
*/ 
var ChatMessage=function(){function _fetchPageTitle(url){var deferred=$.Deferred();return $.ajax({url:"https://query.yahooapis.com/v1/public/yql",dataType:"jsonp",jsonp:"callback",data:{q:"select * from html where url='"+url+"' and xpath='//title'",format:"json"},timeout:3e3}).done(function(data){if(console.debug("_fetchPageTitle()::YQL results ==>"),console.debug(JSON.stringify(data,null,2)),data.query&&data.query.results&&data.query.results.title){var pageTitle=data.query.results.title;deferred.resolve(pageTitle)}}).fail(function(data){console.debug(JSON.stringify(data,null,2)),deferred.reject(data)}),deferred.promise()}function _setLink(url,title){console.debug("_setLink()::url ==>"+url+"<=="),console.debug("_setLink()::title ==>"+title+"<=="),this.links||(this.links=[]);var idx=this.links.length;this.links[idx]={url:url,title:title}}function _checkForMention(word,jsonObj){console.debug('_checkForMention("'+word+'")::BEGIN');var mentionRegEx=/^@(\S)+$/,isMention=mentionRegEx.test(word);if(isMention){console.debug("_checkForMention()::The word ==>"+word+"<== is a Mention"),jsonObj.mentions||(jsonObj.mentions=[]);var idx=jsonObj.mentions.length;jsonObj.mentions[idx]=word.substring(1)}return console.debug('_checkForMention("'+word+'")::END'),isMention}function _checkForEmoticon(word,jsonObj){console.debug('_checkForEmoticon("'+word+'")::BEGIN');var emoticonRegEx=/^\(([^)]{1,15})\)$/,isEmoticon=emoticonRegEx.test(word);if(isEmoticon){console.debug("_checkForEmoticon()::The word ==>"+word+"<== is an Emoticon"),jsonObj.emoticons||(jsonObj.emoticons=[]);var idx=jsonObj.emoticons.length;jsonObj.emoticons[idx]=word.substring(1,word.length-1)}return console.debug('_checkForEmoticon("'+word+'")::END'),isEmoticon}function _checkForLink(word){console.debug('_checkForLink("'+word+'")::BEGIN');var linkRegEx=/^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/,isLink=linkRegEx.test(word);return isLink&&console.debug("_checkForLink()::The word ==>"+word+"<== is a Link"),console.debug('_checkForLink("'+word+'")::END'),isLink}function _determineContentType(word){var contentType;return _checkForMention(word,this)?contentType="mention":_checkForEmoticon(word,this)?contentType="emoticon":_checkForLink(word)?contentType="link":(console.debug("_determineContentType()::The word ==>"+word+"<== is just text"),contentType="text"),contentType}function parseString(chatMessageString){var deferred=$.Deferred();_outputJsonObject={};var _determineContentTypeBound=_determineContentType.bind(_outputJsonObject),_setLinkBound=_setLink.bind(_outputJsonObject),wordArray=chatMessageString.split(" "),linkCount=(wordArray.length,0),fetchedPageCount=0;return wordArray.forEach(function(word){var contentType=_determineContentTypeBound(word);"link"===contentType&&(linkCount++,$.when(_fetchPageTitle(word)).done(function(data){_setLinkBound(word,data)}).then(function(){fetchedPageCount++,console.debug("parseString()::fetchedPageCount ==>"+fetchedPageCount),console.debug("parseString()::linkCount ==>"+linkCount),fetchedPageCount===linkCount&&deferred.resolve()}))}),0===linkCount&&deferred.resolve(),deferred.promise()}function getResult(){return JSON.stringify(_outputJsonObject,null,2)}var _outputJsonObject;return{parseString:parseString,getResult:getResult}}();